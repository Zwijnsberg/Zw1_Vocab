{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/derekbitch/Documents/Programming/LocalProjects/Zwijnsberg/Z1_Vocab/Project/screens/HomeScreen.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { List } from \"react-native-web/dist/index\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { MonoText } from \"../components/StyledText\";\nimport GradientButton from 'react-native-gradient-buttons';\nimport TabBarIcon from \"../components/TabBarIcon\";\nimport GamesScreen from \"../screens/GamesScreen\";\nimport ConnectScreen from \"../screens/ConnectScreen\";\nimport SettingsScreen from \"../screens/SettingsScreen\";\nimport ListItem from \"../components/ListItem\";\nimport PropTypes from 'prop-types';\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen(props) {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    _this = _super.call(this, props);\n\n    _this.onButtonPress = function () {\n      _this.setState({\n        butt1Color: \"#D20909\"\n      });\n\n      _this.onGray();\n    };\n\n    _this.onGray = function () {\n      _this.setState({\n        butt2Color: \"#DAD7D7\"\n      });\n    };\n\n    _this.state = {\n      listInput: '',\n      lists: [{\n        id: 0,\n        title: '',\n        gb: \"#FFFFFF\",\n        ge: \"#FFFFFF\"\n      }]\n    };\n    _this.state = {\n      buttonColor: \"#fff\",\n      listInput: '',\n      lists: [{\n        id: 0,\n        title: 'music',\n        gb: \"#FFFFFF\",\n        ge: \"#FFFFFF\"\n      }, {\n        id: 1,\n        title: 'bruh',\n        gb: \"#FFFFFF\",\n        ge: \"#FFFFFF\"\n      }, {\n        id: 2,\n        title: \"chicken\",\n        gb: \"#FFFFFF\",\n        ge: \"#FFFFFF\"\n      }, {\n        id: 3,\n        title: 'chow',\n        gb: \"#FFFFFF\",\n        ge: \"#FFFFFF\"\n      }]\n    };\n    _this.state = {\n      butt1Color: \"#DAD7D7\",\n      butt2Color: \"#fff\",\n      butt3Color: \"#fff\",\n      butt4Color: \"#fff\",\n      butt5Color: \"#fff\",\n      butt6Color: \"#fff\",\n      butt7Color: \"#09D252\",\n      butt8Color: \"#fff\",\n      butt9Color: \"#fff\",\n      butt10Color: \"#fff\"\n    };\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"addNewList\",\n    value: function addNewList() {\n      var lists = this.state.lists;\n      lists.unshift({\n        id: todos.length + 1,\n        title: this.state.listInput\n      });\n      this.setState({\n        lists: lists,\n        listInput: ' '\n      });\n    }\n  }, {\n    key: \"removeTodo\",\n    value: function removeTodo(item) {\n      var lists = this.state.lists;\n      lists = lists.filter(function (list) {\n        return list.id !== item.id;\n      });\n      this.setState({\n        lists: lists\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        contentContainerStyle: styles.contentContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 5\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'space-evenly',\n          alignItems: 'center',\n          marginVertical: 24\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 5\n        }\n      }, React.createElement(GradientButton, {\n        style: {\n          marginVertical: 8\n        },\n        text: \"General\",\n        textSyle: {\n          fontSize: 20\n        },\n        gradientBegin: \"#874f00\",\n        gradientEnd: \"#f5ba57\",\n        gradientDirection: \"diagonal\",\n        height: 150,\n        width: 190,\n        radius: 15,\n        blueMarine: true,\n        impact: true,\n        impactStyle: \"Light\",\n        onPressAction: function onPressAction() {\n          return navigation.navigate('ListAppScreen');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 5\n        }\n      }), React.createElement(GradientButton, {\n        text: \"+\",\n        textSyle: {\n          fontSize: 120,\n          color: \"#FFFFFF\"\n        },\n        textColor: \"#FFFFFF\",\n        style: {\n          marginVertical: 0\n        },\n        gradientBegin: this.state.butt1Color,\n        gradientEnd: this.state.butt1Color,\n        gradientDirection: \"diagonal\",\n        height: 150,\n        width: 190,\n        radius: 15,\n        impact: true,\n        impactStyle: \"Heavy\",\n        onPressAction: function onPressAction() {\n          return _this2.onButtonPress();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'space-evenly',\n          alignItems: 'center',\n          marginVertical: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 3\n        }\n      }, React.createElement(GradientButton, {\n        style: {\n          marginVertical: 0\n        },\n        text: \"+\",\n        textSyle: {\n          fontSize: 20\n        },\n        gradientBegin: this.state.butt2Color,\n        gradientEnd: this.state.butt2Color,\n        gradientDirection: \"diagonal\",\n        height: 150,\n        width: 190,\n        radius: 15,\n        impactStyle: \"Light\",\n        onPressAction: function onPressAction() {\n          return navigation.navigate('ListAppScreen');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 5\n        }\n      }), React.createElement(GradientButton, {\n        style: {\n          marginVertical: 8\n        },\n        text: \"hello\",\n        textSyle: {\n          fontSize: 20\n        },\n        gradientBegin: \"#fff\",\n        gradientEnd: \"#fff\",\n        gradientDirection: \"diagonal\",\n        height: 150,\n        width: 190,\n        radius: 15,\n        impactStyle: \"Light\",\n        onPressAction: function onPressAction() {\n          return navigation.navigate('ListAppScreen');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 3\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'space-evenly',\n          alignItems: 'center',\n          marginVertical: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 3\n        }\n      }, React.createElement(GradientButton, {\n        text: \"+\",\n        textSyle: {\n          fontSize: 120,\n          color: \"#fff\"\n        },\n        textColor: \"#fff\",\n        style: {\n          marginVertical: 0\n        },\n        gradientBegin: \"#fff\",\n        gradientEnd: \"#fff\",\n        gradientDirection: \"diagonal\",\n        height: 150,\n        width: 190,\n        radius: 15,\n        impactStyle: \"Heavy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 3\n        }\n      }), React.createElement(GradientButton, {\n        text: \"+\",\n        textSyle: {\n          fontSize: 120,\n          color: '\"#FFFFFF\"'\n        },\n        textColor: \"#FFFFFF\",\n        style: {\n          marginVertical: 0\n        },\n        gradientBegin: \"#fff\",\n        gradientEnd: \"#fff\",\n        gradientDirection: \"diagonal\",\n        height: 150,\n        width: 190,\n        radius: 15,\n        impact: true,\n        impactStyle: \"Heavy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 5\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          justifyContent: 'space-evenly',\n          alignItems: 'center',\n          marginVertical: 280\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 3\n        }\n      }, React.createElement(Image, {\n        source: require(\"./../images/datBird.gif\"),\n        style: {\n          width: 100,\n          height: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 5\n        }\n      })));\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nexport { HomeScreen as default };\nHomeScreen.navigationOptions = {\n  header: null\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"sources":["/Users/derekbitch/Documents/Programming/LocalProjects/Zwijnsberg/Z1_Vocab/Project/screens/HomeScreen.js"],"names":["React","Component","List","ScrollView","MonoText","GradientButton","TabBarIcon","GamesScreen","ConnectScreen","SettingsScreen","ListItem","PropTypes","HomeScreen","props","onButtonPress","setState","butt1Color","onGray","butt2Color","state","listInput","lists","id","title","gb","ge","buttonColor","butt3Color","butt4Color","butt5Color","butt6Color","butt7Color","butt8Color","butt9Color","butt10Color","unshift","todos","length","item","filter","list","navigation","styles","container","contentContainer","flex","flexDirection","justifyContent","alignItems","marginVertical","fontSize","navigate","color","require","width","height","navigationOptions","header","StyleSheet","create","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Image, Button, Platform, StyleSheet, FlatList, List,Text, TouchableOpacity, View } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { MonoText } from '../components/StyledText';\nimport GradientButton from 'react-native-gradient-buttons';\nimport TabBarIcon from '../components/TabBarIcon';\nimport GamesScreen from '../screens/GamesScreen';\nimport ConnectScreen from '../screens/ConnectScreen';\nimport SettingsScreen from '../screens/SettingsScreen';\nimport ListItem from '../components/ListItem';\nimport PropTypes from 'prop-types';\n//import { useNavigation } from '@react-navigation/native';\n\n\n//now we need to see how we call the right functions to add a listItem to the list\n// and we need to figure out how to place the generated listItem into the return function in here\n\n//export default function HomeScreen({navigation}) {\nexport default class HomeScreen extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      listInput: '',\n      lists: [\n        { id: 0, title: '', gb: \"#FFFFFF\", ge: \"#FFFFFF\"},\n      ]\n    }\n\n    this.state = {\n      buttonColor: \"#fff\",\n      listInput: '',\n      lists: [\n        { id: 0, title: 'music', gb: \"#FFFFFF\", ge: \"#FFFFFF\"}, \n        { id: 1, title: 'bruh', gb: \"#FFFFFF\", ge: \"#FFFFFF\"},\n        { id: 2, title: \"chicken\", gb: \"#FFFFFF\", ge: \"#FFFFFF\"}, \n        { id: 3, title: 'chow', gb: \"#FFFFFF\", ge: \"#FFFFFF\"},\n      ]\n    }\n\n    this.state = {\n      butt1Color: \"#DAD7D7\", butt2Color: \"#fff\", butt3Color: \"#fff\", butt4Color: \"#fff\", butt5Color: \"#fff\", \n      butt6Color: \"#fff\", butt7Color: \"#09D252\", butt8Color: \"#fff\", butt9Color: \"#fff\", butt10Color: \"#fff\",\n    }\n\n  }\n\n  addNewList () {\n    let lists = this.state.lists;\n\n    lists.unshift({\n      id: todos.length + 1,\n      title: this.state.listInput,\n    });\n\n    this.setState({\n      lists: lists,\n      listInput: ' '\n    });\n  }\n\n\n\n\n  removeTodo (item) {\n    let lists = this.state.lists;\n\n    lists = lists.filter((list) => list.id !== item.id);\n\n    this.setState({lists});\n  }\n\n  onButtonPress = () => {\n    this.setState({ butt1Color: \"#D20909\" });\n    this.onGray(); \n  }\n\n  onGray = () => {\n    this.setState({ butt2Color: \"#DAD7D7\" }); \n  }\n\n\n  render(){\n\n  const { navigation } = this.props;\n\n    /*\n    TO GET THE SCREEN FULLY WORKING AGAIN PUT IN THE OLD EXPORT DEFAULT, THEN  REMOVE CONSTRUCTOR () {..}\n    AND REMOVE THE RENDER THING AND TAKE THE ENTIRE RETURN() OUT OF IT\n    \n    */\n  \n  return (\n    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n    <View style={{flex: 1, flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginVertical: 24}}> \n\n    <GradientButton\n      style={{ marginVertical: 8 }}\n      text=\"General\"\n      textSyle={{ fontSize: 20 }}      \n      gradientBegin=\"#874f00\"\n      gradientEnd=\"#f5ba57\"\n      gradientDirection=\"diagonal\"\n      height={150}\n      width={190}\n      radius={15}\n      blueMarine impact\n      impactStyle='Light'\n      onPressAction={() => navigation.navigate('ListAppScreen')}\n      //onPress={() => {window.location.href = 'ListScreen'}\n    />\n\n      <GradientButton\n            text=\"+\"\n            textSyle={{ fontSize: 120, color: \"#FFFFFF\"}}\n            textColor=\"#FFFFFF\"    \n            style={{ marginVertical: 0 }}  \n            gradientBegin= {this.state.butt1Color}\n            gradientEnd= {this.state.butt1Color}\n            gradientDirection=\"diagonal\"\n            height={150}\n            width={190}\n            radius={15}\n            impact\n            impactStyle='Heavy'\n            onPressAction={() => this.onButtonPress()}\n          />\n  </View>\n\n  <View style={{flex: 1, flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginVertical: 0}}>\n\n    <GradientButton\n      style={{ marginVertical: 0 }}\n      text=\"+\"\n      textSyle={{ fontSize: 20 }}      \n      gradientBegin= {this.state.butt2Color}\n      gradientEnd= {this.state.butt2Color}\n      gradientDirection=\"diagonal\"\n      height={150}\n      width={190}\n      radius={15}\n      //blueViolet impact\n      impactStyle='Light'\n      onPressAction={() => navigation.navigate('ListAppScreen')}\n      //onPressAction={() => alert('Back off bitch')}\n    />\n\n  <GradientButton\n      style={{ marginVertical: 8 }}\n      text= \"hello\" //lists[1].title\n      textSyle={{ fontSize: 20 }}      \n      gradientBegin=\"#fff\"\n      gradientEnd=\"#fff\"\n      gradientDirection=\"diagonal\"\n      height={150}\n      width={190}\n      radius={15}\n      //violetPink impact\n      impactStyle='Light'\n      onPressAction={() => navigation.navigate('ListAppScreen')}\n      //onPressAction={() => alert('Back off bitch')}\n      />\n\n  </View>\n\n  <View style={{flex: 1, flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginVertical: 30}}>\n  <GradientButton\n      text=\"+\"\n      textSyle={{ fontSize: 120, color: \"#fff\"}}\n      textColor=\"#fff\"    \n      style={{ marginVertical: 0 }}  \n      gradientBegin=\"#fff\"\n      gradientEnd=\"#fff\"\n      gradientDirection=\"diagonal\"\n      height={150}\n      width={190}\n      radius={15}\n      //impact\n      impactStyle='Heavy'\n      //onPressAction={() => alert('Back off bitch')}\n    />\n\n    <GradientButton\n      text=\"+\"\n      textSyle={{ fontSize: 120, color: '\"#FFFFFF\"'}}\n      textColor=\"#FFFFFF\"    \n      style={{ marginVertical: 0 }}  \n      gradientBegin=\"#fff\"\n      gradientEnd=\"#fff\"\n      gradientDirection=\"diagonal\"\n      height={150}\n      width={190}\n      radius={15}\n      impact\n      impactStyle='Heavy'\n      //onPressAction={() => alert('Back off bitch')}\n    />\n\n    \n\n  </View>\n\n  <View style={{flex: 1, flexDirection: 'row', justifyContent: 'space-evenly', alignItems: 'center', marginVertical: 280}}>\n    <Image \n        source={require('./../images/datBird.gif')}  \n        style={{width: 100, height: 100 }}\n    />\n  </View>\n  </ScrollView>\n  );\n  }\n}\n\n/*\n\n    <FlatList\n            data={this.state.lists}\n            extraData={this.state}\n            keyExtractor={(item, index) => index.toString()}\n            renderItem={({item, index}) => {\n              return (\n                <ListItem ListItem={item}/>  \n              )\n            }}\n          />\n    \n    <FlatList\n            data={this.state.lists}\n            extraData={this.state}\n            keyExtractor={(item, index) => index.toString()}\n            renderItem={({item, index}) => {\n              return (\n                <ListItem ListItem={item}/>  \n              )\n            }}\n          />\n\n\n\n\nthe following can be used to present a created list into the view through a flatlist:\n    \n      <List>\n          <FlatList\n            data={lists}\n            renderItem={this.renderRow}\n            keyExtractor={item => item.title}\n          />\n      </List>\n\n\nfunction addNewList () {\n    let lists = this.state.lists;\n\n    lists.unshift({\n      id: lists.length + 1,\n      title: \"cow\", //this may have to be single quote\n    });\n\n    this.setState({\n      lists: lists,\n      title: \"cow\",\n    });\n  }\n\n\nfunction toggleDone (item) {\n    let lists = this.state.lists;\n\n    lists = lists.map((list) => {\n      if (list.id == list.id) {\n        list.done = !list.done;\n      }\n      return list;\n    })\n\n    this.setState({lists});\n  }\n\nfunction removeList (item) {\n    let lists = this.state.lists;\n\n    lists = lists.filter((list) => list.id !== item.id);\n\n    this.setState({lists});\n  }\n\n\n    <ListItem listItem={item} toggleDone={() => toggleDone(item)} removeTodo={() => removeTodo(item)}/>\n  export default function HomeScreen({navigation}) {\n    export const object = {\n      name: 'joe',\n      age: 27,\n      country: 'France'\n  }\n\n// put the functions here, make sure they are put here correctly\n// implement them \n// create a seperate component for the button item which will be created\n\n\nthis.state = {\n      listInput: '',\n      lists: [\n        { id: 0, title: ' '}\n      ]\n    }\n\nfunction addNewList () {\n    let lists = this.state.lists;\n\n    todos.unshift({\n      id: todos.length + 1,\n      title: this.state.listInput,\n    });\n\n    this.setState({\n      lists: lists,\n      listInput: ''\n    });\n  }\n\n\nfunction toggleDone (item) {\n    let lists = this.state.lists;\n\n    lists = lists.map((list) => {\n      if (list.id == list.id) {\n        list.done = !list.done;\n      }\n\n      return list;\n    })\n\n    this.setState({lists});\n  }\n\nfunction removeList (item) {\n    let lists = this.state.lists;\n\n    lists = lists.filter((todo) => todo.id !== item.id);\n\n    this.setState({lists});\n  }\n\n  */\n\n\n\nHomeScreen.navigationOptions = {\n  header: null,\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}