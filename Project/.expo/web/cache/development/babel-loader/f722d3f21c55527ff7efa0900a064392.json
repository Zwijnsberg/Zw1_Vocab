{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/derekbitch/Documents/Programming/LocalProjects/Zwijnsberg/Z1_Vocab/Project/components/TodoItem.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar TodoItem = function (_React$Component) {\n  _inherits(TodoItem, _React$Component);\n\n  var _super = _createSuper(TodoItem);\n\n  function TodoItem(props) {\n    _classCallCheck(this, TodoItem);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(TodoItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var todoItem = this.props.todoItem;\n      return React.createElement(TouchableOpacity, {\n        style: styles.todoItem,\n        onPress: function onPress() {\n          return _this.props.toggleDone();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: todoItem.done ? {\n          color: '#AAAAAA'\n        } : {\n          color: '#313131'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, todoItem.title), React.createElement(Button, {\n        title: \" \\u24E7     \",\n        color: todoItem.done ? 'D2E7FE' : '#D2E7FE',\n        onPress: function onPress() {\n          return _this.props.removeTodo();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return TodoItem;\n}(React.Component);\n\nexport { TodoItem as default };\nvar styles = StyleSheet.create({\n  todoItem: {\n    width: '100%',\n    height: 40,\n    borderBottomColor: '#DDD',\n    borderBottomWidth: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 15\n  }\n});","map":{"version":3,"sources":["/Users/derekbitch/Documents/Programming/LocalProjects/Zwijnsberg/Z1_Vocab/Project/components/TodoItem.js"],"names":["React","TodoItem","props","todoItem","styles","toggleDone","done","color","title","removeTodo","Component","StyleSheet","create","width","height","borderBottomColor","borderBottomWidth","flexDirection","alignItems","justifyContent","paddingLeft"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;IAGqBC,Q;;;;;AACnB,oBAAaC,KAAb,EAAoB;AAAA;;AAAA,6BACZA,KADY;AAEnB;;;;6BAES;AAAA;;AACR,UAAMC,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAA5B;AAEA,aACE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAEC,MAAM,CAACD,QADhB;AAEE,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACD,KAAL,CAAWG,UAAX,EAAN;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGF,QAAQ,CAACG,IAAV,GAAkB;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAlB,GAAyC;AAAEA,UAAAA,KAAK,EAAE;AAAT,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIJ,QAAQ,CAACK,KADb,CAJF,EAQE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,cADR;AAEE,QAAA,KAAK,EAAGL,QAAQ,CAACG,IAAV,GAAkB,QAAlB,GAA6B,SAFtC;AAGE,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACJ,KAAL,CAAWO,UAAX,EAAN;AAAA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAgBD;;;;EAxBmCT,KAAK,CAACU,S;;SAAvBT,Q;AA2BrB,IAAMG,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,QAAQ,EAAE;AACRU,IAAAA,KAAK,EAAE,MADC;AAERC,IAAAA,MAAM,EAAE,EAFA;AAGRC,IAAAA,iBAAiB,EAAE,MAHX;AAIRC,IAAAA,iBAAiB,EAAE,CAJX;AAKRC,IAAAA,aAAa,EAAE,KALP;AAMRC,IAAAA,UAAU,EAAE,QANJ;AAORC,IAAAA,cAAc,EAAE,eAPR;AAQRC,IAAAA,WAAW,EAAE;AARL;AADqB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, Button, TouchableOpacity } from 'react-native';\n\nexport default class TodoItem extends React.Component {\n  constructor (props) {\n    super(props);\n  }\n\n  render () {\n    const todoItem = this.props.todoItem;\n\n    return (\n      <TouchableOpacity\n        style={styles.todoItem}\n        onPress={() => this.props.toggleDone()}\n      >\n        <Text style={(todoItem.done) ? { color: '#AAAAAA' } : { color: '#313131' }}>\n          { todoItem.title }\n        </Text>\n\n        <Button\n          title=\" â“§     \"\n          color={(todoItem.done) ? 'D2E7FE' : '#D2E7FE' }\n          onPress={() => this.props.removeTodo()}\n        />\n      </TouchableOpacity>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  todoItem: {\n    width: '100%',\n    height: 40,\n    borderBottomColor: '#DDD',\n    borderBottomWidth: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingLeft: 15\n  }\n})"]},"metadata":{},"sourceType":"module"}