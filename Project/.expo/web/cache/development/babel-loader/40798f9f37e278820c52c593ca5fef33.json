{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/derekbitch/Documents/Programming/LocalProjects/Zwijnsberg/Z1_Vocab/Project/navigation/ListScreens/ListAS3.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Navigator } from \"react-native-web/dist/index\";\nimport Header from \"../../components/Header\";\nimport InputBar from \"../../components/InputBar\";\nimport TodoItem from \"../../components/TodoItem\";\nimport 'react-native-gesture-handler';\n\nvar ListAS3 = function (_React$Component) {\n  _inherits(ListAS3, _React$Component);\n\n  var _super = _createSuper(ListAS3);\n\n  function ListAS3() {\n    var _this;\n\n    _classCallCheck(this, ListAS3);\n\n    _this = _super.call(this);\n    _this.state = {\n      todoInput: '',\n      todos: [{\n        id: 0,\n        title: '',\n        done: false\n      }]\n    };\n    _this.state = {\n      todoInput: '',\n      todos: []\n    };\n    return _this;\n  }\n\n  _createClass(ListAS3, [{\n    key: \"addNewTodo\",\n    value: function addNewTodo() {\n      var todos = this.state.todos;\n      todos.unshift({\n        id: todos.length + 1,\n        title: this.state.todoInput,\n        done: false\n      });\n      this.setState({\n        todos: todos,\n        todoInput: ' '\n      });\n    }\n  }, {\n    key: \"toggleDone\",\n    value: function toggleDone(item) {\n      var todos = this.state.todos;\n      todos = todos.map(function (todo) {\n        if (todo.id == item.id) {\n          todo.done = !todo.done;\n        }\n\n        return todo;\n      });\n      this.setState({\n        todos: todos\n      });\n    }\n  }, {\n    key: \"removeTodo\",\n    value: function removeTodo(item) {\n      var todos = this.state.todos;\n      todos = todos.filter(function (todo) {\n        return todo.id !== item.id;\n      });\n      this.setState({\n        todos: todos\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var statusbar = Platform.OS == 'ios' ? React.createElement(View, {\n        style: styles.statusbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 48\n        }\n      }) : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 89\n        }\n      });\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, React.createElement(InputBar, {\n        addNewTodo: function addNewTodo() {\n          return _this2.addNewTodo();\n        },\n        textChange: function textChange(todoInput) {\n          return _this2.setState({\n            todoInput: todoInput\n          });\n        },\n        todoInput: this.state.todoInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }), React.createElement(FlatList, {\n        data: this.state.todos,\n        extraData: this.state,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item,\n              index = _ref.index;\n          return React.createElement(TodoItem, {\n            todoItem: item,\n            toggleDone: function toggleDone() {\n              return _this2.toggleDone(item);\n            },\n            removeTodo: function removeTodo() {\n              return _this2.removeTodo(item);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return ListAS3;\n}(React.Component);\n\nexport { ListAS3 as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF'\n  },\n  statusbar: {\n    backgroundColor: '#838EFE',\n    height: 40\n  }\n});","map":{"version":3,"sources":["/Users/derekbitch/Documents/Programming/LocalProjects/Zwijnsberg/Z1_Vocab/Project/navigation/ListScreens/ListAS3.js"],"names":["React","Navigator","Header","InputBar","TodoItem","ListAS3","state","todoInput","todos","id","title","done","unshift","length","setState","item","map","todo","filter","statusbar","Platform","OS","styles","container","addNewTodo","index","toString","toggleDone","removeTodo","Component","StyleSheet","create","flex","backgroundColor","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Platform, StyleSheet, Text, View, FlatList, Navigator } from 'react-native';\nimport Header from '../../components/Header';\nimport InputBar from '../../components/InputBar';\nimport TodoItem from '../../components/TodoItem';\nimport 'react-native-gesture-handler';\n\nexport default class ListAS3 extends React.Component {\n  constructor () {\n    super();\n\n    this.state = {\n      todoInput: '',\n      todos: [\n        { id: 0, title: '', done: false }\n      ]\n    }\n\n    this.state = {\n      todoInput: '',\n      todos: [\n      ]\n    }\n\n  }\n\n  addNewTodo () {\n    let todos = this.state.todos;\n\n    todos.unshift({\n      id: todos.length + 1,\n      title: this.state.todoInput,\n      done: false\n    });\n\n    this.setState({\n      todos: todos,\n      todoInput: ' '\n    });\n  }\n\n  toggleDone (item) {\n    let todos = this.state.todos;\n\n    todos = todos.map((todo) => {\n      if (todo.id == item.id) {\n        todo.done = !todo.done;\n      }\n\n      return todo;\n    })\n\n    this.setState({todos});\n  }\n\n  removeTodo (item) {\n    let todos = this.state.todos;\n\n    todos = todos.filter((todo) => todo.id !== item.id);\n\n    this.setState({todos});\n  }\n\n  render() {\n    const statusbar = (Platform.OS == 'ios') ? <View style={styles.statusbar}></View> : <View></View>;\n      return (\n\n          <View style={styles.container}>\n\n          <InputBar\n            addNewTodo={() => this.addNewTodo()}\n            textChange={todoInput => this.setState({ todoInput })}\n            todoInput={this.state.todoInput}\n          />\n\n\n          <FlatList\n            data={this.state.todos}\n            extraData={this.state}\n            keyExtractor={(item, index) => index.toString()}\n            renderItem={({item, index}) => {\n              return (\n                <TodoItem todoItem={item} toggleDone={() => this.toggleDone(item)} removeTodo={() => this.removeTodo(item)} />\n                \n              )\n            }}\n          />\n          </View>\n      );\n    } \n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFFFFF',\n  },\n  statusbar: {\n    backgroundColor: '#838EFE',\n    height: 40\n  }\n});"]},"metadata":{},"sourceType":"module"}