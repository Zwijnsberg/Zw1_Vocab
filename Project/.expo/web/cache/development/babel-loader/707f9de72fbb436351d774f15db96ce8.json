{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/derekbitch/Documents/Programming/LocalProjects/Zwijnsberg/Z1_Vocab/Project/navigation/ListScreen.js\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nimport React, { Component, useState } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Navigator } from \"react-native-web/dist/index\";\nimport Header from \"../components/Header\";\nimport InputBar from \"../components/InputBar\";\nimport 'react-native-gesture-handler';\nexport default function ConnectScreen() {\n  var statusbar = Platform.OS == 'ios' ? React.createElement(View, {\n    style: styles.statusbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 46\n    }\n  }) : React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 87\n    }\n  });\n\n  var _React$useState = React.useState('Useless Placeholder'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      onChangeText = _React$useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, statusbar, React.createElement(InputBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    extraData: this.state,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction OptionButton(_ref2) {\n  var icon = _ref2.icon,\n      label = _ref2.label,\n      onPress = _ref2.onPress,\n      isLastOption = _ref2.isLastOption;\n  return React.createElement(RectButton, {\n    style: [styles.option, isLastOption && styles.lastOption],\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.optionIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Ionicons, {\n    name: icon,\n    size: 22,\n    color: \"rgba(0,0,0,0.35)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.optionTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, label))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa'\n  },\n  contentContainer: {\n    paddingTop: 15\n  },\n  optionIconContainer: {\n    marginRight: 12\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#ededed'\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1\n  }\n});","map":{"version":3,"sources":["/Users/derekbitch/Documents/Programming/LocalProjects/Zwijnsberg/Z1_Vocab/Project/navigation/ListScreen.js"],"names":["Ionicons","RectButton","ScrollView","React","Component","useState","Navigator","Header","InputBar","ConnectScreen","statusbar","Platform","OS","styles","value","onChangeText","container","state","item","index","toString","OptionButton","icon","label","onPress","isLastOption","option","lastOption","flexDirection","optionIconContainer","optionTextContainer","optionText","StyleSheet","create","flex","backgroundColor","contentContainer","paddingTop","marginRight","paddingHorizontal","paddingVertical","borderWidth","hairlineWidth","borderBottomWidth","borderColor","fontSize","alignSelf","marginTop"],"mappings":"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","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nimport React, { Component, useState } from 'react';\nimport { Platform, StyleSheet, Text, TextInput, View, FlatList, Navigator } from 'react-native';\nimport Header from '../components/Header';\nimport InputBar from '../components/InputBar';\n//import TodoItem from '../components/TodoItem';\nimport 'react-native-gesture-handler';\n\n\n\nexport default function ConnectScreen() {\n  const statusbar = (Platform.OS == 'ios') ? <View style={styles.statusbar}></View> : <View></View>;\n  const [value, onChangeText] = React.useState('Useless Placeholder');\n  return (\n\n        <View style={styles.container}>\n        {statusbar}\n\n        <InputBar />\n\n        <FlatList\n          extraData={this.state}\n          keyExtractor={(item, index) => index.toString()}\n          renderItem={({item, index}) => {\n            return (\n              <View>\n              </View>\n            )\n          }}\n        />\n        </View>\n  );\n}\n\n\nfunction OptionButton({ icon, label, onPress, isLastOption }) {\n  return (\n    <RectButton style={[styles.option, isLastOption && styles.lastOption]} onPress={onPress}>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={styles.optionIconContainer}>\n          <Ionicons name={icon} size={22} color=\"rgba(0,0,0,0.35)\" />\n        </View>\n        <View style={styles.optionTextContainer}>\n          <Text style={styles.optionText}>{label}</Text>\n        </View>\n      </View>\n    </RectButton>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fafafa',\n  },\n  contentContainer: {\n    paddingTop: 15,\n  },\n  optionIconContainer: {\n    marginRight: 12,\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#ededed',\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1,\n  },\n});"]},"metadata":{},"sourceType":"module"}